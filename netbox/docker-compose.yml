version: '3.8'

services:
  netbox: &a1
    image: docker.io/netboxcommunity/netbox:${VERSION-v4.0-2.9.1}
    depends_on:
      - postgres
      - redis
      - redis-cache
    env_file: env/netbox.env
    user: unit:root
    healthcheck:
      start_period: 60s
      timeout: 3s
      interval: 15s
      test: curl -f http://localhost:8080/login/ || exit 1
    volumes:
      - ./configuration:/etc/netbox/config:z,ro
      - ./netbox-media-files:/opt/netbox/netbox/media:rw
      - ./netbox-reports-files:/opt/netbox/netbox/reports:rw
      - ./netbox-scripts-files:/opt/netbox/netbox/scripts:rw
    restart: unless-stopped
    networks:
      vlan200:
        ipv4_address: 172.16.20.12
      netbox_bridge:

  netbox-worker:
    <<: *a1
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: ps -aux | grep -v grep | grep -q rqworker || exit 1
    restart: unless-stopped
    networks:
      - netbox_bridge

  netbox-housekeeping:
    <<: *a1
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/housekeeping.sh
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: ps -aux | grep -v grep | grep -q housekeeping || exit 1
    restart: unless-stopped
    networks:
      - netbox_bridge

  postgres:
    image: docker.io/postgres:16-alpine
    env_file: env/postgres.env
    volumes:
      - ./netbox-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - netbox_bridge

  redis:
    image: docker.io/redis:7-alpine
    command:
      - sh
      - -c
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD
    env_file: env/redis.env
    volumes:
      - ./netbox-redis-data:/data
    restart: unless-stopped
    networks:
      - netbox_bridge

  redis-cache:
    image: docker.io/redis:7-alpine
    command:
      - sh
      - -c
      - redis-server --requirepass $$REDIS_PASSWORD
    env_file: env/redis-cache.env
    volumes:
      - ./netbox-redis-cache-data:/data
    restart: unless-stopped
    networks:
      - netbox_bridge

networks:
  netbox_bridge:
    driver: bridge
  vlan200:
    external: true
