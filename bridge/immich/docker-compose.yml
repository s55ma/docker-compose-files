services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    environment:
      USER: "1000:1000"
    ports:
      - 2283:3001
    depends_on:
      - redis
      - database
      - typesense
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - ./data/model-cache:/cache
      - ./data/config:/.config
      - ./data/cache:/.cache
    env_file:
      - .env
    environment:
      USER: "1000:1000"
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW

  typesense:
    container_name: immich_typesense
    image: typesense/typesense:0.24.1@sha256:9bcff2b829f12074426ca044b56160ca9d777a0c488303469143dd9f8259d4dd
    volumes:
      - ./data/tsdata:/data
    environment:
      USER: "1000:1000"
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
      TYPESENSE_DATA_DIR: /data
      GLOG_minloglevel: 1
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine@sha256:70a7a5b641117670beae0d80658430853896b5ef269ccf00d1827427e3263fa3
    environment:
      USER: "1000:1000"
    volumes:
      - ./data/redis:/data
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      USER: "1000:1000"
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    restart: always
